#!/bin/bash

# Figlet: https://www.figlet.org/
figlet "  "$(hostname -s) | lolcat

# Define variables
osName=$(sw_vers -productName)
osVersion=$(sw_vers -productVersion)
osbuildVersion=$(sw_vers -buildVersion)
kernelVersion=$(sysctl -n kern.version | awk '{print $1" "$4}' | sed 's/.$//')
procesorName=$(sysctl -n machdep.cpu.brand_string)
procesorCores=$(sysctl -n machdep.cpu.core_count)
memorySize=$(sysctl -n hw.memsize)
memoryType=$(system_profiler SPMemoryDataType | grep -e "Type" | uniq | awk '{print $2}')
memorySpeed=$(system_profiler SPMemoryDataType | grep -e "Speed" | uniq | awk '{print $2" "$3}')

warnDiskTemperature=50
criticalDiskTemperature=61
warnCpuTemperature=60
criticalCpuTemperature=80
diskTemperature=$(smartctl -a /dev/disk1s1 | grep Temperature | awk '{print $2}')
cpuTemperature=$(osx-cpu-temp -C -c)
cpuTemperatureInt=$(echo ${cpuTemperature} | awk '{print int($1)}')
gpuTemperature=$(osx-cpu-temp -C -g)
gpuTemperatureInt=$(echo ${gpuTemperature} | awk '{print int($1)}')
fontColor="\e[97m"
clear="\e[0m"
# Set Disk Temperature color
if [ "${diskTemperature}" -gt "${criticalDiskTemperature}" ]; then
    diskColor="\e[1;41m"
elif [ "${diskTemperature}" -le "${criticalDiskTemperature}" ] && [ "${diskTemperature}" -gt "${warnDiskTemperature}" ] ; then
    diskColor="\e[1;43m"
else
    diskColor="\e[1;42m"
fi
# Set CPU Temperature color
if [ "${cpuTemperatureInt}" -gt "${criticalCpuTemperature}" ]; then
    cpuColor="\e[1;41m"
elif [ "${cpuTemperatureInt}" -le "${criticalCpuTemperature}" ] && [ "${cpuTemperatureInt}" -gt "${warnCpuTemperature}" ] ; then
    cpuColor="\e[1;43m"
else
    cpuColor="\e[1;42m"
fi
# Set GPU Temperature color
if [ "${gpuTemperatureInt}" -gt "${criticalCpuTemperature}" ]; then
    gpuColor="\e[1;41m"
elif [ "${gpuTemperatureInt}" -le "${criticalCpuTemperature}" ] && [ "${gpuTemperatureInt}" -gt "${warnCpuTemperature}" ] ; then
    gpuColor="\e[1;43m"
else
    gpuColor="\e[1;42m"
fi

# Print system info
echo -e "\e[1mSystem Information\e[0m
\tOS Version: ${osName} ${osVersion} ${osbuildVersion} ${kernelVersion}
\tProcessor.: ${procesorName} ${procesorCores} Cores
\tMemory....: $((${memorySize} / (1024**3))) GB ${memorySpeed} ${memoryType}
\tDisk Temp..: ${fontColor}${diskColor} ${diskTemperature}.0Â°C ${clear}
\tCPU Temp..: ${fontColor}${cpuColor} ${cpuTemperature} ${clear}
\tGPU Temp..: ${fontColor}${gpuColor} ${gpuTemperature} ${clear}
"

# Define variables
barWidth=50
warnDiscUsage=90
barClear="\e[0m"
barContent=""
diskSize=$(diskutil info /dev/disk1s1 | grep Total | awk '{ print int($4) }')
diskFree=$(diskutil info /dev/disk1s1 | grep Free | awk '{ print int($4) }')
diskUsage=$((${diskSize} - ${diskFree}))
diskUsagePercent=$(bc -l <<< "scale=2; (${diskUsage} / ${diskSize}) * 100" | awk '{ print int($1) }')
barUsageWidth=$(((${diskUsagePercent} * ${barWidth}) / 100))
barColor="\e[33m"
# Set bar color to red if warning value is reached
if [ "${diskUsagePercent}" -ge "${warnDiscUsage}" ]; then
    barColor="\e[31m"
fi

# Set disk usage bar
barContent="[${barColor}"
for sec in {1..${barUsageWidth}}; do
    barContent="${barContent}|"
done
barContent="${barContent}${barClear}"

# Set free disk space bar
barUsageLeft=$((${barWidth} - ${barUsageWidth}))
if [ "${barUsageLeft}" -gt 0 ]; then
    for sec in {1..${barUsageLeft}}; do
        barContent="${barContent}-"
    done
fi
barContent="${barContent}]"

# Print the result
echo -e "\e[1mHDD Usage:\e[0m ${diskUsage} GB out of ${diskSize} G"
echo -e ${barContent}
echo ""
